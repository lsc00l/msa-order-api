server.port=8083
spring.application.name=order-api

spring.datasource.url=jdbc:mysql://order-db:3307/orderdb
spring.datasource.username=root
spring.datasource.password=rootpassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Kafka
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.max.block.ms=90000

# Prometheus Actuator Endpoints
management.endpoints.web.exposure.include=prometheus,health,info,metric
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
management.metrics.tags.application=${spring.application.name:order-api}

# Logging for debugging
logging.level.root=INFO
logging.level.com.example=DEBUG
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG
logging.level.org.springframework.transaction=DEBUG

